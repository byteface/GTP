{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17320\viewh9540\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 if GPU gives us code access cant we run the js code on that as image processes?\
\
\
so if you turn a color pixel for each letter in the alphabet?\'85. or colors for words maybe. when doing sentiment analysis. thinking in imagery works well for us as patterns so why not comp. try a js experiment storing strings as pixel colors for regex like operations over documents maybe?\
\
fetch a pixel fetches a letter\
fetch a row fetches a word or sentence\
\
so turn those trained sentences into color documents\
\
complex vertices of words turned into colors would create interesting interpolations on words within the gradient space. these are probably dreams.\
\
dreams is using words on the GPU. you do this because the CPU goes to sleep.\
\
possibly made faster with run length encoded maps\
\
\
\
\
experiment for opinion mining using GPU - will turn the text data into an image using colors for letters then pattern search that for sentiment analysis. Currently porting this \'85\
\
{\field{\*\fldinst{HYPERLINK "http://www.phpir.com/bayesian-opinion-mining"}}{\fldrslt http://www.phpir.com/bayesian-opinion-mining}}\
\
to javascript , which would run incredibly slowly. then use the image maps instead see what performance gains are. I'm predicting 14X faster. this potentially could lead to a new regex parser that utilizes canvas.\
\
\
few tutorials here on analyzing canvas and pixel shaders etc\
\
https://developer.mozilla.org/en/WebGL\
\
\
also interesting article here\'85\
\
https://developer.mozilla.org/en/WebGL/Using_shaders_to_apply_color_in_WebGL}